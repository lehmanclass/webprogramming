{"version":3,"sources":["GifCard.js","ViewFullImage.js","App.js","index.js"],"names":["GifCard","props","className","onClick","handleClick","focusUrl","src","url","alt","width","height","ViewFullImage","App","fetchGif","search","state","trim","length","fetch","method","headers","Accept","body","JSON","stringify","searchTerm","then","res","json","data","setState","gifs","results","imageUrl","displayGifs","gifContainer","forEach","gif","push","gifUrl","key","handleChange","e","target","value","handleKeyPress","this","id","onChange","onKeyPress","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uOAaeA,MAXf,SAAiBC,GACf,OACE,yBACEC,UAAU,qBACVC,QAAS,kBAAMF,EAAMG,YAAYH,EAAMI,YAEvC,yBAAKC,IAAKL,EAAMM,IAAKC,IAAI,MAAMC,MAAM,QAAQC,OAAO,YCQ3CC,MAdf,SAAuBV,GACrB,OACE,yBAAKC,UAAU,sBACb,6BACE,yBAAKA,UAAU,YACf,yBAAKI,IAAKL,EAAMM,IAAKC,IAAI,MAE3B,6BACE,4BAAQN,UAAU,QAAQC,QAAS,kBAAMF,EAAMG,YAAY,MAA3D,QCoFOQ,G,kBAxFb,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KAORY,SAAW,WAAO,IACRC,EAAW,EAAKC,MAAhBD,OACJA,EAAOE,OAAOC,OAAS,GACzBC,MAAM,cAAe,CACnBC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEC,WAAYX,MAElCY,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CAAEC,KAAMF,EAAKG,cArBhB,EA0BnB5B,YAAc,SAAAG,GACZ,EAAKuB,SAAS,CAAEG,SAAU1B,KA3BT,EA8BnB2B,YAAc,WAAO,IACXH,EAAS,EAAKhB,MAAdgB,KACFI,EAAe,GAarB,OAXAJ,EAAKK,SAAQ,SAAAC,GACXF,EAAaG,KACX,kBAAC,EAAD,CACElC,YAAa,EAAKA,YAClBG,IAAK8B,EAAIE,OACTlC,SAAUgC,EAAIhC,SACdmC,IAAKH,EAAIG,UAKR,yBAAKtC,UAAU,iBAAiBiC,IA7CtB,EAgDnBM,aAAe,SAAAC,GACb,EAAKZ,SAAS,CAAEhB,OAAQ4B,EAAEC,OAAOC,SAjDhB,EAoDnBC,eAAiB,SAAAH,GACF,SAATA,EAAEF,KACJ,EAAK3B,YApDP,EAAKE,MAAQ,CACXD,OAAQ,GACRmB,SAAU,IAJK,E,sEA0DT,IAAD,EAC4Ba,KAAK/B,MAAhCgB,EADD,EACCA,KAAMjB,EADP,EACOA,OAAQmB,EADf,EACeA,SACtB,OAAIA,EACK,kBAAC,EAAD,CAAe7B,YAAa0C,KAAK1C,YAAaG,IAAK0B,IAI1D,yBAAK/B,UAAU,oBACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,SAAd,eAGF,yBAAKA,UAAU,mBACb,2BACE6C,GAAG,mBACHH,MAAO9B,EACPkC,SAAUF,KAAKL,aACfQ,WAAYH,KAAKD,iBAEnB,4BAAQE,GAAG,oBAAoB5C,QAAS2C,KAAKjC,UAA7C,WAKDkB,EAAOe,KAAKZ,cAAgB,U,GAnFnBgB,IAAMC,YCCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e3c6eccf.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction GifCard(props) {\n  return (\n    <div\n      className=\"gif-result-display\"\n      onClick={() => props.handleClick(props.focusUrl)}\n    >\n      <img src={props.url} alt=\"gif\" width=\"150px\" height=\"150px\" />\n    </div>\n  );\n}\n\nexport default GifCard;\n","import React from \"react\";\n\nfunction ViewFullImage(props) {\n  return (\n    <div className=\"gif-focus-display \">\n      <div>\n        <div className=\"overlay\"></div>\n        <img src={props.url} alt=\"\" />\n      </div>\n      <div>\n        <button className=\"close\" onClick={() => props.handleClick(\"\")}>X</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ViewFullImage;\n","import React from \"react\";\nimport GifCard from \"./GifCard\";\nimport ViewFullImage from \"./ViewFullImage\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      imageUrl: \"\"\n    };\n  }\n\n  fetchGif = () => {\n    const { search } = this.state;\n    if (search.trim().length > 0) {\n      fetch(\"/gif_search\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ searchTerm: search })\n      })\n        .then(res => res.json())\n        .then(data => {\n          this.setState({ gifs: data.results });\n        });\n    }\n  };\n\n  handleClick = url => {\n    this.setState({ imageUrl: url });\n  };\n\n  displayGifs = () => {\n    const { gifs } = this.state;\n    const gifContainer = [];\n\n    gifs.forEach(gif => {\n      gifContainer.push(\n        <GifCard\n          handleClick={this.handleClick}\n          url={gif.gifUrl}\n          focusUrl={gif.focusUrl}\n          key={gif.key}\n        />\n      );\n    });\n\n    return <div className=\"gif-container\">{gifContainer}</div>;\n  };\n\n  handleChange = e => {\n    this.setState({ search: e.target.value });\n  };\n\n  handleKeyPress = e => {\n    if (e.key == \"Enter\") {\n      this.fetchGif();\n    }\n  };\n\n  render() {\n    const { gifs, search, imageUrl } = this.state;\n    if (imageUrl) {\n      return <ViewFullImage handleClick={this.handleClick} url={imageUrl} />;\n    }\n\n    return (\n      <div className=\"parent-container\">\n        <div className=\"header\">\n          <h2 className=\"title\">Gif Search</h2>\n        </div>\n\n        <div className=\"input-container\">\n          <input\n            id=\"gif-search-input\"\n            value={search}\n            onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress}\n          />\n          <button id=\"gif-search-submit\" onClick={this.fetchGif}>\n            Search\n          </button>\n        </div>\n\n        {gifs ? this.displayGifs() : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}